# DSL version, should appear in the main blueprint.yaml
# and may appear in other imports. In such case, the versions must match
tosca_definitions_version: cloudify_dsl_1_3

imports:
    # importing cloudify related types, plugins, workflow, etc...
    # to speed things up, it is possible downloading this file,
    # including it in the blueprint directory and importing it
    # instead.
    - http://www.getcloudify.org/spec/cloudify/3.4.2/types.yaml
    # relative import of plugin.yaml that resides in the blueprint directory
    - test_plugin.yaml

inputs:
    # example input that could be injected by test
    hostname:
        description: hostname of the Foreman server
        default: foreman01v.sdlab.fairisaac.com
    port:
        description: port for the Foreman server
        default: 8080
    foreman_username:
        description: foreman username
        default: AshishKumar
    foreman_password:
        description: foreman password
        default: LOL

node_templates:
    # defining a single node template that will serve as our test node
    test_node_template:
        # using base cloudify type
        type: cloudify.nodes.Root
        interfaces:
            cloudify.interfaces.lifecycle:
                start:
                    # here we map the single plugin task to the start operation
                    # of the cloudify.interfaces.lifecycle interface
                    implementation: foreman.plugin.tasks.create_host
                    inputs:
                        # my_task accepts a single property named
                        # some property. Here we inject this property
                        # from the input provided by the test
                        # (or 'default_test_input' if no input was provided)
                        hostname: { get_input: hostname }
                        port: { get_input: port }
                        username: { get_input: foreman_username }
                        password: { get_input: foreman_password }

outputs:
    # example output the could be used to simplify assertions by test
    test_output:
        description: an output for the test
        value: { get_attribute: [test_node_template, hostname] }
